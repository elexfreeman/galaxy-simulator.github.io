(function(){"use strict";class o{constructor(t,s){this.x=t,this.y=s}static add(t,s){return new o(t.x+s.x,t.y+s.y)}static minus(t,s){return new o(t.x-s.x,t.y-s.y)}static addScalar(t){return new o(this.x+t,this.y+t)}static mult(t,s){return new o(t.x*s.x,t.y*s.y)}static length(t){return Math.sqrt(t.x*t.x+t.y*t.y)}}const a=(r,t)=>{const s=new o(0,0),c=()=>(r.family==t.family,1),n=o.minus(t.coord,r.coord),i=o.length(n);return s.x=.01*c()*n.x/(i*i),s.y=.01*c()*n.y/(i*i),s};class y{constructor(t,s,c){this.bodyList=t,this.startIdx=s,this.count=c}getCenterMassVector(){const t=new o(0,0);for(let s=0;s<this.bodyList.length;s++)t.x+=this.bodyList[s].coord.x,t.y+=this.bodyList[s].coord.y;return t.x=t.x/this.bodyList.length-1e3/2,t.y=t.y/this.bodyList.length-1e3/2,t}calc(){const t=[];for(let s=this.startIdx;s<this.startIdx+this.count&&!(s>=this.bodyList.length);s++)this.calcBody(this.bodyList[s],s),t.push(this.bodyList[s]);return t}calcBody(t,s){for(let n=0;n<this.bodyList.length;n++)if(n!=s){const i=this.bodyList[n],e=a(t,i);t.velocity=o.add(t.velocity,e)}const c=o.add(t.velocity,t.coord);t.coord.x=c.x,t.coord.y=c.y}}onmessage=function(r){const{bodyList:t,startIdx:s,count:c,workerIdx:n}=r.data,e=new y(t,s,c).calc();postMessage(e)}})();
